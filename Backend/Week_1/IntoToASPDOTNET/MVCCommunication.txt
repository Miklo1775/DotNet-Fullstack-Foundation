MODEL-VIEW-CONTROLLER COMMUNICATION

--How do they communicate?
*Client sends requests to the controller.
*Controller determines if it needs to communicate with the view to display the data or if it needs to communicate with the model to change the data.
*If it needs to display the data, it simply interacts with view and returns a view to the client with the help of an action method.
*If the data needs to be prepared or if it needs to communicate with the database, it sends it to the model and then after the preparations, sends it to the View, then back from the view to the controller to the client.
*View and Models do not interact with each other and needs a controller to prepare the response.

> Model to Model:
	*We can communicate from Model to Model via parameters/composition.
> Model to View:
	*To communicate Model to View, we have to follow the path Model > Controller > View.
	*We can't go directly from View to Controller.
	*We can pass the data or communicate from Model to View in the following three steps:
		//Take the object in the action of a Controller.
		//Pass Model object as a parameter to View.
		//Use @model to include Model on the View page.
> Model to Controller:
	*Create an object of Model class in Controller to access the Model in Controller.
> View to Model:
	*To communicate View to Model, you have to follow the path View > Controller > Model.
	*We can't move directly from View to Model.
	*First, you have to submite data to the controller and then pass it to the model.
	*To pass the data from a View to Model, we have to do the following three steps:
		//Submit HTML form to a Controller.
		//Create an object of Model in Controller.
		//Pass values to the Model object.
> View to View:
	*We can move from one view to another by using partial views.
> View to Controller:
	*We can move data from view to controller by submitting forms to controllers or by:
		--JSON
		--AJAX Calls
		--JavaScript
		--Partial Views
> Controller to Model:
	*We can move from Controller to Model just like we move from Model to Controller.
> View to Controller:
	*We can move data from controller to view in the following ways:
		//By using viewBag
		//ViewData
		//TempData
> Controller to Controller
	*We can move from one Controller to another by using RedirectToAction(); and then pass the name of the specific action.